<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douban.dao.ArticleDao">
    <resultMap id="BaseResultMap" type="com.douban.domain.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="transpond_num" jdbcType="INTEGER" property="transpondNum" />
    <result column="agreement_num" jdbcType="INTEGER" property="agreementNum" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    </resultMap>

    <resultMap id="UserAndArticleMap" type="com.douban.domain.UserAndArticle">
      <collection property="user" ofType="com.douban.domain.User" column="user">
          <id column="id" jdbcType="INTEGER" property="id" />
          <result column="name" jdbcType="VARCHAR" property="name" />
          <result column="password" jdbcType="VARCHAR" property="password" />
          <result column="phone" jdbcType="VARCHAR" property="phone" />
          <result column="avatar" jdbcType="VARCHAR" property="avatar" />
          <result column="gender" jdbcType="VARCHAR" property="gender" />
          <result column="signature" jdbcType="VARCHAR" property="signature" />
          <result column="status" jdbcType="VARCHAR" property="status" />
          <result column="ban_time" jdbcType="TIMESTAMP" property="banTime" />
      </collection>
      <collection property="article" ofType="com.douban.domain.Article" column="article">
          <id column="id" jdbcType="INTEGER" property="id" />
          <result column="title" jdbcType="VARCHAR" property="title" />
          <result column="content" jdbcType="VARCHAR" property="content" />
          <result column="time" jdbcType="TIMESTAMP" property="time" />
          <result column="status" jdbcType="INTEGER" property="status" />
          <result column="type" jdbcType="VARCHAR" property="type" />
          <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
          <result column="transpond_num" jdbcType="INTEGER" property="transpondNum" />
          <result column="agreement_num" jdbcType="INTEGER" property="agreementNum" />
          <result column="user_id" jdbcType="INTEGER" property="userId" />
      </collection>
    </resultMap>

    <select id="getArticles" resultMap="UserAndArticleMap">
        select avatar,name,article.id,title,content,article.status,type,comment_num,transpond_num,agreement_num from user inner join article
        on user.id = article.user_id
        where user.id in (select id from user) order by article.status desc, article.time desc
    </select>

    <select id="getTranspondArticle" resultMap="UserAndArticleMap">
        select user.id,name,article.id,title,content from user inner join article inner join transpond
        on transpond.article_id = article.id and article.user_id = user.id
        where transpond.id = #{id}
    </select>

    <select id="getArticle" resultMap="UserAndArticleMap">
        select user.id,name,avatar,article.id,title,content,time,agreement_num,comment_num,transpond_num from user inner join article
        on article.user_id = user.id
        where article.id = #{id};
    </select>

    <delete id="deleteArticle">
        delete from article where id = #{id};
    </delete>

    <insert id="publishArticle" useGeneratedKeys="true" keyProperty="id">
        insert into article(title,content,type,time,user_id) values(#{title},#{content},#{type},#{time},#{userId});
    </insert>

    <select id="getMyArticle" resultMap="BaseResultMap">
        select id,title,content,article.time from article where user_id = #{id} order by article.time desc limit 0,2;
    </select>

    <select id="fuzzySearchArticle" resultMap="BaseResultMap">
        select id,title,content,time,type from article where title like "%"#{msg}"%" or content like "%"#{msg}"%"
    </select>

    <update id="updateArticleStatus">
        update article set status = #{status} where id = #{id};
    </update>
</mapper>